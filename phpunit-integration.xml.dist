<?xml version="1.0" encoding="UTF-8"?>
<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.1/phpunit.xsd"
         colors="true"
         bootstrap="www/dev/tests/integration/framework/bootstrap.php"
>
    <testsuites>
        <testsuite name="unit">
            <directory suffix="Test.php">src/Test/Integration</directory>
        </testsuite>
    </testsuites>

    <filter>
        <whitelist addUncoveredFilesFromWhiteList="true">
            <directory suffix=".php">src</directory>

            <exclude>
                <directory suffix="registration.php">src</directory>

                <directory>src/Test</directory>
                <directory>src/Setup</directory>
            </exclude>
        </whitelist>
    </filter>

    <php>
        <includePath>.</includePath>
        <includePath>www/dev/tests/integration</includePath>
        <includePath>www/dev/tests/integration/testsuite</includePath>
        <ini name="date.timezone" value="Europe/Berlin" />
        <ini name="xdebug.max_nesting_level" value="200" />
        <!-- Local XML configuration file ('.dist' extension will be added, if the specified file doesn't exist) -->
        <const name="TESTS_INSTALL_CONFIG_FILE" value="etc/install-config-mysql.php" />
        <!-- Local XML configuration file ('.dist' extension will be added, if the specified file doesn't exist) -->
        <const name="TESTS_GLOBAL_CONFIG_FILE" value="etc/config-global.php" />
        <!-- Semicolon-separated 'glob' patterns, that match global XML configuration files -->
        <!-- !!! caution in magento 2.2 integration tests are always run from dev/tests/integration -->
        <!-- !!! furthmore the global_config_dir will get a realpath, so the path needs to from the integration dir -->
        <const name="TESTS_GLOBAL_CONFIG_DIR" value="../../../app/etc" />
        <!--<const name="TESTS_GLOBAL_CONFIG_DIR" value="/application/www/app/etc" />-->
        <!-- Whether to cleanup the application before running tests or not -->
        <const name="TESTS_CLEANUP" value="disabled" />
        <!-- Memory usage and estimated leaks thresholds -->
        <!--<const name="TESTS_MEM_USAGE_LIMIT" value="1024M"/>-->
        <const name="TESTS_MEM_LEAK_LIMIT" value="" />
        <!-- Whether to output all CLI commands executed by the bootstrap and tests -->
        <!--<const name="TESTS_EXTRA_VERBOSE_LOG" value="1"/>-->
        <!-- Path to Percona Toolkit bin directory -->
        <!--<const name="PERCONA_TOOLKIT_BIN_DIR" value=""/>-->
        <!-- CSV Profiler Output file -->
        <!--<const name="TESTS_PROFILER_FILE" value="profiler.csv"/>-->
        <!-- Bamboo compatible CSV Profiler Output file name -->
        <!--<const name="TESTS_BAMBOO_PROFILER_FILE" value="profiler.csv"/>-->
        <!-- Metrics for Bamboo Profiler Output in PHP file that returns array -->
        <!--<const name="TESTS_BAMBOO_PROFILER_METRICS_FILE" value="../../build/profiler_metrics.php"/>-->
        <!-- Magento mode for tests execution. Possible values are "default", "developer" and "production". -->
        <const name="TESTS_MAGENTO_MODE" value="developer" />
        <!-- Minimum error log level to listen for. Possible values: -1 ignore all errors, and level constants form http://tools.ietf.org/html/rfc5424 standard -->
        <const name="TESTS_ERROR_LOG_LISTENER_LEVEL" value="-1" />
        <!-- Connection parameters for MongoDB library tests -->
        <!--<const name="MONGODB_CONNECTION_STRING" value="mongodb://localhost:27017"/>-->
        <!--<const name="MONGODB_DATABASE_NAME" value="magento_integration_tests"/>-->
    </php>

    <listeners>
        <listener class="Magento\TestFramework\Event\PhpUnit" />
        <listener class="Magento\TestFramework\ErrorLog\Listener" />
    </listeners>

    <logging>
        <!--<log type="coverage-html" target="build/output/phpunit-integration/coverage-html/" charset="UTF-8"-->
        <!--yui="true" highlight="false" lowUpperBound="35" highLowerBound="70" />-->
        <!--<log type="coverage-clover" target="build/output/phpunit-integration/clover.xml" />-->
        <!--<log type="junit" target="build/output/phpunit-integration/phpunit.xml" logIncompleteSkipped="false" />-->
    </logging>
</phpunit>
